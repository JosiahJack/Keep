//=============================================================================
//       ___  ___  __            __   __  
// |__/ |__  |__  |__)     |\/| /  \ |  \
// |  \ |___ |___ |        |  | \__/ |__/                                                    
//
// Compiled by Qmaster
//
// Attributions: All, see credits folder
//
//
// Distribution / Copyright / Permissions 
//
// Please do not use any of these assets in ANY COMMERCIAL PROJECT.
// and remember to give credit if you use any of these assets. Please credit
// the appropriate authors of the various content used.  Refer to the credits
// folder.
//				  
// The QC files in this MOD are based on 1.06 source files by ID Software.
// These files are released under the terms of GNU General Public License v2 or
// later. You may use the source files as a base to build your own MODs as long
// as you release them under the same license and make the source available.
// Please also give proper credit. Check http://www.gnu.org for details.
//
// Quake is a registered trademark of id Software, Inc.
//
// All of these resources may be electronically distributed only at 
// NO CHARGE to the recipient.
//
// Stats:
// Entity count: 0
// Function count: 0
//
// Implements: Compile order and what files are included
//
// Description:
// This lists each code file to include in the mod.
// The order is important since the compiler needs to know about functions
// ahead of time so it can confirm the data types and arguments all match.
//=============================================================================

// Comment format:			// STATE Notes	
// STATEs:					// <Implemented (blank> It works in-game, or should.
							// REFINED: Tested in-game Formatted to standards,
							//          removed redundancy, general checks.
							// FINALIZED: It's done. Add comment header, final
							//            code cleanups. Added to documentation.
							// N/A Does not apply.

// progs.src				// REFINED You are looking at it.
// COPYING.TXT				// N/A GNU GPL v2.0 License
// qc_highlight.xml			// N/A Handy highlighting for IDE's

//====================== Start of actual mod code =============================
../progs.dat				// N/A Places progs.dat file one folder up

// Definitions
//-----------------------------------------------------------------------------
defs.qc						// Base entity field and globals definitions
defskeep.qc					// Definitions for Keep
defsclass.qc				// Definitions for class system
defsextras.qc				// Definitions for extras_r5 and extras_r4
defscustom.qc				// Definitions for Arcane Dimensions and Keep
defshipnotic.qc				// Definitions for Hipnotic
defsnehahra.qc				// Definitions for Nehahra
defsrogue.qc				// Definitions for Rogue
defsrubicon.qc				// Definitions for Rubicon, Rubicon 2, and RRP
defsquoth.qc				// Definitions for Quoth 1 and up
defskinn.qc					// Definitions for Kinn Marcher and Bastion
defsdrake.qc				// Definitions for Drake (SOE, Rapture, Something W)
defshexen2.qc				// Definitions for Hexen 2
defsaoa.qc					// Definitions for Arms of Asgaard (AoA)
defsq15.qc					// Definitions for Quake 1.5 (q15)
defsredfield.qc				// Definitions for Redfield's Ravenkeep
dpextensions.qc 			// Darkplaces Engine definitions and API hooks
qsextensions.qc 			// QSS Engine definitions and API hooks
fteextensions.qc 			// FTE Engine definitions and API hooks
qrobotdefs.qc				// Definitions for Qmaster's programmable xyz robots
csqc_defs.qc				// Handles for csqc references
csqc_hudkeep.qc				// Handles for csqc hud specific references

// Globally used subroutins aka subs, including math and physics
//-----------------------------------------------------------------------------
mathlib.qc					// REFINED Math functions library

// Gyro2 Physics
gyro_main.qc				// Main Gyro physics updates
gyro_forces.qc				// Gyro physics force calculations
gyro_physics.qc				// Gyro physics physical calculations
gyro_user.qc				// Gyro physics API hook functions

subs.qc						// Standard subroutines
subs_soc.qc					// Arcane Dimensions (AD) subroutines
subs_kinn.qc				// Kinn Marcher and Bastion subroutines
subs_keep.qc				// Keep subroutines
subs_drake.qc				// Drake subroutines
subs_rubicon.qc				// Rubicon, Rubicon 2, RRP subroutines
subs_extras.qc				// extras_r5, extras_r4 subroutines
subs_hexen2.qc				// Hexen 2 subroutines
subs_aoa.qc					// Arms of Asgaard (AoA subroutines
subs_q15.qc					// Quake 1.5 subroutines
subs_nehahra.qc				// Nehahra subroutines

// Systems
//-----------------------------------------------------------------------------
estate.qc					// Arcane Dimensions (AD) Entity State System
hiprot.qc					// Hipnotic Rotation System
globalfog.qc				// Arcane Dimensions (AD) Fog and Skyfog Change System
chaosmode.qc				// Arcane Dimensions (AD) and Copper Nightmare/Evil/Chaos Mode
settings.qc					// REFINED Arcane Dimensions (AD) Mod Settings System
impulse.qc					// REFINED Keybinds and Cheats System
breakable.qc				// Arcane Dimensions (AD) Breakable Brush Models System
// breakables_qmaster.qc	// progs_dump Breakable Brush Models System
pushable.qc					// REFINED Pushable Brush Models System
switchshad.qc
part_manage.qc
part_generate.qc
part_emitter.qc
drake_aim.qc
ai_allegiance.qc			// REFINED Definitions and subroutines for AI behavior System
ai_gibs.qc
ai_enemytarget.qc			// REFINED AI System for flying monsters to stay above their enemy
ai_passive.qc				// REFINED Passive State System for friendly(ish) monsters and denizens
ai_tether.qc
ai_pathcorner.qc			// REFINED Path Following System for monsters and trains
fx.qc
ai_ammoresist.qc			// REFINED Ammo Resistance System effects and damage functions
fx_nehahra.qc
fx_q15.qc
hiphorn.qc
ai_sight.qc
ai_subs.qc
ai_states.qc
ai_combat.qc				// REFINED Damage System for all damage application
ai_minions.qc				// REFINED Minion System for monsters spawning monsters and minion eggs
ai_hazards.qc				// REFINED Hazard Projectile System
ai_checkattack.qc			// REFINED Check routines form monsters to decide when and which attacks

// Projectiles and Effects
//-----------------------------------------------------------------------------
// Drake
fx_drake.qc
drake_cool.qc
drake_fire.qc
drake_reflect.qc
drake_cutscene.qc

fablade.qc 					// from Hexen 2 used by Fallen Angel in fangel.qc
faspell.qc 					// from Hexen 2 used by Fallen Angel in fangel.qc

projectiles.qc				// Projectile System for all projectiles that cause damage
projectiles_keep.qc
projectiles_drake.qc
projectiles_nehahra.qc

precache_keep.qc
world.qc

shrine.qc
client_cshift.qc
client_mapvar.qc
client_debuff.qc
monster_debuff.qc
client_power.qc
client_evilmode.qc
legs.qc
client.qc
client_obituary.qc
client_camera.qc
client_info.qc
client_advinfo.qc
misc_globalstate.qc
monsters.qc
items.qc
items_keep.qc
drake_armor.qc
items_drake.qc
items_aoa.qc
items_progspn.qc

weapons_aoa.qc
weapons.qc
w_mjolniradaya.qc
drake_hook.qc
player.qc
lights.qc
lights_keep.qc
triggers_states.qc
triggers.qc
triggers_keep.qc
targets.qc
func.qc
func_doors.qc
func_doorsecret.qc
func_buttons.qc
func_pswitch.qc
func_insvolume.qc
elevatr.qc
func_plats.qc
func_keep.qc
func_trains.qc
misc.qc
misc_model.qc
misc_camera.qc
misc_keep.qc
misc_quoth.qc
misc_drake.qc
misc_textbook.qc
misc_targetdummy.qc
scripting_extra.qc // Quake 1.5 actor code
misc_q15.qc
traps.qc
traps_hipnotic.qc
traps_pendulum.qc
traps_sawblade.qc
traps_turret.qc
sounds.qc
soundskeep.qc
misc_rubicon2.qc
versus.qc

soul.qc

// Monsters
mon_demon.qc
mon_dog.qc
mon_fish.qc
mon_hknight.qc
mon_knight.qc
mon_ogre.qc
mon_enforcer.qc
mon_enforcers_lunaran.qc // Lunaran stuff, located here to inherit $frame references from mon_enforcer.qc
mon_shalrath.qc
mon_shambler.qc
mon_soldier.qc
mon_tarbaby.qc
mon_wizard.qc
mon_zombie.qc

// AD Monsters
mon_boil.qc
mon_centurion.qc
mon_dcrossbow.qc
mon_dfury.qc
mon_dguard.qc
mon_dknight.qc
mon_swampling.qc

// Kinn monster, here because of shared frame macros
mon_dchampion.qc

// AD Monsters continued...
mon_drole.qc
mon_dsergeant.qc
mon_freddie.qc
mon_gargoyle.qc
mon_gaunt.qc
mon_golem.qc
mon_hogre.qc
mon_hogreham.qc
mon_hogremac.qc
mon_jim.qc
mon_lostsoul.qc
//mon_manglioch.qc // Does not yet exist!
mon_megaforce.qc
mon_minotaur.qc
mon_pyro.qc
mon_scorpion.qc
mon_seeker.qc
mon_skullwiz.qc
mon_spider.qc
mon_voreling.qc
mon_wraith.qc
mon_zombiek.qc

// Xmas Monsters
mon_xmas_elf.qc
mon_xmas_raindeer.qc
mon_xmas_snowman.qc
mon_xmas_santa.qc

// AD's ID1 Bosses
mon_bossidchthon.qc
mon_bossidshub.qc
mon_bossxxchthon.qc
mon_bossxxshub.qc

// AD Bosses
mon_bossboglord.qc
mon_bosseidolon.qc
mon_bossfiretop.qc
mon_bossicegolem.qc
mon_bosslichfiend.qc
mon_bossnour.qc

// AD 1.81 additions
mon_deflector.qc
mon_dprince.qc
mon_steelclaw.qc
mon_sweeper.qc // Hypnogogia Monsters
mon_turretbal.qc // Hypnogogia Monsters
mon_bossmammoth.qc // Hypnogogia Monsters
//mon_bossphobetor.qc // Hypnogogia Monsters  // Does not yet exist!
//mon_bosspsyder.qc // Hypnogogia Monsters  // Does not yet exist!
mon_bossjudicator.qc // Justice

// Hipnotic stuff
mon_armagon.qc
mon_centroid.qc
mon_spikemine.qc
mon_gremlin.qc
hiprubbl.qc
hip_part.qc
hip_brk.qc
hip_expl.qc
hipclock.qc

// Rogue stuff
mon_eel.qc
mon_invis_sw.qc
mon_lavaman.qc
mon_mummy.qc
mon_wrath.qc
mon_wrath_overlord.qc
mon_morph.qc
mon_dragon.qc
mon_tarbabymitosis.qc
earthq.qc

// Kinn stuff
mon_ogreflak.qc
mon_supergrunt.qc

// Quoth stuff
misc_corpses.qc
mon_deathguard.qc
mon_dlord.qc
mon_polyp.qc
mon_gug.qc
mon_vermis.qc
mon_sentinel.qc

// Rubicon stuff
mon_floyd.qc

// Drake stuff
mon_archer.qc
mon_baron.qc
ai_ryu.qc
ai_wyrm.qc
mon_ryu.qc
mon_shade.qc
mon_bandit.qc
mon_vomitus.qc
revive.qc // used by necro and bane
mon_necro.qc
mon_cyber.qc
mon_hlord_dragon.qc // the Dark Lord transforms into a dragon beast
mon_hlord.qc
mon_rebel.qc // Crossbow bandit (enforcer derived)
wand.qc
misc_hostage.qc

// Zerstorer stuff
mon_trog.qc
//mon_zerst.qc // Heavily modified to make use of madfox's added poses

// Nehahra
//mon_enf2.qc
//mon_enf3.qc
//mon_beard.qc
mon_nehahra.qc
//mon_mistermax.qc
//mon_archgaunt.qc
//mon_jagger.qc
//mon_wraith_nehahra.qc // drake's version

// Soul of Evil stuff
mon_axeman.qc

// Lunaran stuff
mon_axegrunt.qc

// Operation Urth Majik stuff
mon_drone.qc
mon_tur.qc

// Custent stuff
//mon_turret.qc
//mon_srvomech.qc
//mon_zmaster.qc

// Pox's extras_r4 stuff
extras_ai.qc
extras_train.qc
extras_buttons.qc
extras_emitters.qc
extras_water.qc
extras_triggers.qc
extras_fx.qc
extras_misc.qc
mon_hydra.qc

// Random community stuff
mon_snakeman.qc
mon_wspider.qc
mon_anaconda.qc
mon_virtusboss.qc
vigil.qc // From Wright's Vigil map, had a useful triggerable Congratulations Intermission
//mon_redback.qc // From tefdbl3 by T. H. Johansen (TJ)

// Keep stuff
qrobot.qc // Qmaster's super syncronized trains, boring right, until the whole world is made of them
mon_inquisitor.qc // Inquisitor by Qmaster, model from Hexen II
mon_octa.qc // Octopus by madfox
//mon_lampoon.qc // Lampoon fish by madfox
//mon_rhynch.qc // Jelly Fish by madfox
//mon_balrog.qc // Balrog by madfox
//mon_xogre.qc // Elden Ogre by madfox derived from QTest
mon_fragy.qc // Frog by madfox
//mon_orgulus.qc // Dr. Mhorbo Orgulus by madfox
//mon_samuri.qc // Samuri Knight by madfox
//mon_mcorn.qc // Manticore by madfox
mon_swarm.qc // Bees by madfox
mon_sheep.qc // Hexen2 sheep, modified
mon_ogle.qc // Heretic2 ogle, slightly modified
mon_flytrap.qc // Venus Fly Trap by madfox
mon_spellmas.qc // Red worm boss called Baseboss from madfox's Phantom Pholly map.  Interesting trivia, this is probably the only mod that combines hipnotic and extras_r4

// Hexen 2 (most are in Drake but these weren't)
mon_fangel.qc

// Travail
//mon_ubs.qc // Uber Scrag

// Quake 1.5
mon_warlord.qc
mon_carnivean.qc
mon_dfury_boss.qc
mon_shalrath_boss.qc
mon_reiver.qc
mon_oldone_tentacle.qc

// The Lieutenant (of lthsp3, back2forward, etc.)
// mon_sknight.qc // Crossbow normal Knight

// Redfield
mon_raven.qc

// Hipnotic spawn - must be LAST
hipspawn.qc