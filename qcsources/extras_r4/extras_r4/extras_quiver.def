group { "Liquids"		func_water : "Rising Water" solid {		watertype(IntSelect) : "Water Type" : -3 {			-3 : "Water"			-4 : "Slime"			-5 : "Lava"		}		height(Int) : "Move distance" : 16		speed(Int) : "Move Speed" : 10		+speed2(Int) : "Return Speed" : 10		+wait(IntSelect) : "Wait for next movement" : 0 {			-1 : "Wait for re-trigger"		}		+noise(String) : "Path to move WAV file" : ""		+noise1(String) : "Path to return WAV file" : ""		+noise2(String) : "Path to idle WAV file" : ""		+targetname(TargetName) : "Target Name"		+target(Target) : "Target Destination"		+mangle(String) : "Current direction & speed" : "0 0 0"		+drag(Int) : "Drag percentage" : 0		+cshift(String) : "Custom Color Shift (RGBI)" : "0 0 0 0"		+spawnflags(SpawnFlags) : "Spawn Flags"  {		   16 : "Invert depth for drag"		}		+_nomirror(IntSelect) : "Disable Face Mirroring" : 1 {			1 : "Do Not Mirror Inside Faces"		}	}		func_watertrain : "Moving Water" solid {		watertype(IntSelect) : "Water Type" : -3 {			-3 : "Water"			-4 : "Slime"			-5 : "Lava"		}		target(Target) : "First Waypoint, or Parent" {			func_train_ext			train_ext_waypoint		}		+targetname(TargetName) : "Target Name"		+speed(IntSelect) : "Move Speed" : 10 {			-1 : "Warp to next waypoint"		}		+noise(String) : "Path to travel WAV file" : ""		+noise1(String) : "Path to stop WAV file" : ""		+noise4(String) : "Path to change dir WAV file" : ""		+noise5(String) : "Path to wrong-way WAV file" : ""		+mangle(String) : "Current direction & speed" : "0 0 0"		+drag(Int) : "Drag percentage" : 0		+cshift(String) : "Custom Color Shift (RGBI)" : "0 0 0 0"		+spawnflags(SpawnFlags) : "Spawn Flags"  {			1 :	"Start On"			2 :	"Allow Pause/Resume"			4 :	"Allow Direction Changes"			8 : "Reverse at Endpoints"		   32 : "Start in Reverse"		   16 : "Invert depth for drag"		}		+event(Target) : "Alt. Start Position" {			train_ext_waypoint		}		+_nomirror(IntSelect) : "Disable Face Mirroring" : 1 {			1 : "Do Not Mirror Inside Faces"		}	}}group { "Moving Platforms"		func_train_ext : "Platform (Ext)" solid {		target(Target) : "First Waypoint" {			train_ext_waypoint		}		+targetname(TargetName) : "Target Name"		+dmg(Int) : "Damage when blocked" : 2		+speed(IntSelect) : "Move Speed" : 100 {			-1 : "Warp to next waypoint"		}		+noise(String) : "Path to travel WAV file" : ""		+noise1(String) : "Path to stop WAV file" : ""		+noise4(String) : "Path to change dir WAV file" : ""		+noise5(String) : "Path to wrong-way WAV file" : ""		+spawnflags(SpawnFlags) : "Spawn Flags"  {			1 :	"Start On"			2 :	"Allow Pause/Resume"			4 :	"Allow Direction Changes"			8 : "Reverse at Endpoints"		   16 : "Reverse if Blocked"		   32 : "Start in Reverse"		}		+event(Target) : "Alt. Start Position" {			train_ext_waypoint		}	}		train_ext_waypoint : "Path Waypoint" box(-8 -8 -8, 8 8 8) {		origin(Origin)		targetname(TargetName) : "Target Name"		+speed(Int) : "Speed" : 100		+wait(IntSelect) : "Wait for next movement" : 0 {			-1 : "Wait for re-trigger"		}		target(Target) : "Next Destination" {			train_ext_waypoint		}		+event(Target) : "Trigger event"		+noise(String) : "Override travel WAV file" : ""		+noise1(String) : "Override stop WAV file" : ""		+speed2(Int) : "Reverse Speed" : 100		+wait2(IntSelect) : "Reverse Wait" : 0 {			-1 : "Wait for re-trigger"		}		+noise2(String) : "Reverse travel WAV file" : ""		+noise3(String) : "Reverse stop WAV file" : ""		+event2(Target) : "Reverse Trigger event"		+spawnflags(SpawnFlags) : "Spawn Flags" { }	}}group { "Buttons and Switches"	func_button_ext : "Button (Ext)" solid {		angle(Angle) : "Angle of movement" : 0		target(Target) : "Target Destination"		wait(IntSelect) : "Delay before reset" : 3 {			-1 : "Stays pressed"		}		+speed(Int) : "Speed" : 5		+lip(Int) : "Lip (amount left sticking out)" : 4		+health(Int) : "Health (shootable if > 0)" : 1		+noise(String) : "Path to push WAV file" : ""		+noise1(String) : "Path to return WAV file" : ""		+noise2(String) : "Path to disabled WAV file" : ""		+message(String) : "Disabled message"		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags"	 {			1 :	"Start Disabled"			2 :	"Touch Always Activates"		}	}		func_switch : "Toggle Switch" solid {		target(Target) : "Target Destination"		+angle(Angle) : "Player's Facing Direction" : 0		+wait(IntSelect) : "Delay before reset" : -1 {			-1 : "Wait for re-trigger"		}		+noise(String) : "Path to push WAV file" : ""		+noise1(String) : "Path to (optional) return WAV file" : ""		+targetname(TargetName) : "Target Name"		+event(Target) : "Parent Train" {			func_train_ext		}		+spawnflags(SpawnFlags) : "Spawn Flags"	 {			1 :	"Don't Activate on return"			2 :	"Can't touch until return"		}	}}group { "Emitter Systems"		func_emitter : "Point Emitter" box(-8 -8 -8, 8 8 8) {		origin(Origin)		mdl(String) : "Path to Particle Model" : ""		+mdl2(String) : "Path to Particle Death Model" : ""		wait(Float) : "Delay between particles" : 0.1		+wait2(Float) : "Delay Range" : 1.0		+ppe(Int) : "Particles Per Emission" : 1		+avelocity(string) : "Emitter Angle Velocity (spin)" : "0 0 0"		speed(Int) : "Particle Speed" : 20		+speed2(Int) : "Particle Speed Range" : 40		lspan(Float) : "Particle Lifespan" : 2		+lspan2(Float) : "Particle Lifespan Range" : 4		h1(Int) : "Horizontal Angle" : 1		+h2(Int) : "Horizontal Angle Range" : 360		v1(Int) : "Vertical Angle" : 1		+v2(Int) : "Vertical Angle Range" : 360		style(IntSelect) : "Particle Movetype" : 6 {		   6 : "Toss"		  10 : "Bounce"		   5 : "Fly"		   0 : "None"		}		+effects(IntSelect) : "Particle Effects" : 0 {		   0 : "None"	  		   1 : "EF_BRIGHTFIELD"		   2 : "EF_MUZZLEFLASH"		   4 : "EF_BRIGHTLIGHT"		   8 : "EF_DIMLIGHT"		}		+gravity(Float) : "Particle Gravity Modifier" : 1.0		+dmg(Int) : "Particle Touch Damage" : 4		+frame(Int) : "Animation Start Frame" : 0		+nfrms(Int) : "Number of Animation Frames" : 0		+nfrms2(Int) : "Number of Death Animation Frames" : 0		+frate(Float) : "Framerate" : 0.1		+frate2(Float) : "Death Framerate" : 0.1			+noise(String) : "Path to Emitter Noise" : ""		+noise1(String) : "Path to Particle Touch Noise" : ""		+noise2(String) : "Path to Particle Die Noise" : ""		+message(String) : "Death Message" : ""		+weapon(IntSelect) : "Particle dmg Touch Effect" : 0 {		  -1 : "None"		   0 : "TE_SPIKE"		   1 : "TE_SUPERSPIKE"		   2 : "TE_GUNSHOT"		   3 : "TE_EXPLOSION"		   4 : "TE_TAREXPLOSION"		   5 : "TE_LIGHTNING1"		   6 : "TE_LIGHTNING2"		   7 : "TE_WIZSPIKE"		   8 : "TE_KNIGHTSPIKE"		   9 : "TE_LIGHTNING3"		  10 : "TE_LAVASPLASH"		  11 : "TE_TELEPORT"		}		+target(Target) : "Parent Train" {			func_train_ext		}		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"			2 :	"Emit Solid Particles"			4 :	"Kill Particles on Touch"			8 :	"Kill Particles After Last Frame"		   16 :	"Spin Particles"		   32 :	"Stagger Start Frames"		   64 :	"Kill Particles in func_water"		  128 :	"Can be Manipulated by Effectors"		  256 :	"Spawn Stopped (Spin)"		}	}		func_emitter_volume : "Volume Emitter" solid {		mdl(String) : "Path to Particle Model" : ""		+mdl2(String) : "Path to Particle Death Model" : ""		wait(Float) : "Delay between particles" : 0.1		+wait2(Float) : "Delay Range" : 1.0		+ppe(Int) : "Particles Per Emission" : 1		+avelocity(string) : "Emitter Angle Velocity (spin)" : "0 0 0"		speed(Int) : "Particle Speed" : 20		+speed2(Int) : "Particle Speed Range" : 40		lspan(Float) : "Particle Lifespan" : 2		+lspan2(Float) : "Particle Lifespan Range" : 4		h1(Int) : "Horizontal Angle" : 1		+h2(Int) : "Horizontal Angle Range" : 360		v1(Int) : "Vertical Angle" : 1		+v2(Int) : "Vertical Angle Range" : 360		style(IntSelect) : "Particle Movetype" : 6 {		   6 : "Toss"		  10 : "Bounce"		   5 : "Fly"		   0 : "None"		}		+effects(IntSelect) : "Particle Effects" : 0 {		   0 : "None"	  		   1 : "EF_BRIGHTFIELD"		   2 : "EF_MUZZLEFLASH"		   4 : "EF_BRIGHTLIGHT"		   8 : "EF_DIMLIGHT"		}		+gravity(Float) : "Particle Gravity Modifier" : 1.0		+dmg(Int) : "Particle Touch Damage" : 4		+frame(Int) : "Animation Start Frame" : 0		+nfrms(Int) : "Number of Animation Frames" : 0		+nfrms2(Int) : "Number of Death Animation Frames" : 0		+frate(Float) : "Framerate" : 0.1		+frate2(Float) : "Death Framerate" : 0.1			+noise(String) : "Path to Emitter Noise" : ""		+noise1(String) : "Path to Particle Touch Noise" : ""		+noise2(String) : "Path to Particle Die Noise" : ""		+message(String) : "Death Message" : ""		+weapon(IntSelect) : "Particle Touch Broadcast Effect" : 0 {		  -1 : "None"	  		   0 : "TE_SPIKE"		   1 : "TE_SUPERSPIKE"		   2 : "TE_GUNSHOT"		   3 : "TE_EXPLOSION"		   4 : "TE_TAREXPLOSION"		   5 : "TE_LIGHTNING1"		   6 : "TE_LIGHTNING2"		   7 : "TE_WIZSPIKE"		   8 : "TE_KNIGHTSPIKE"		   9 : "TE_LIGHTNING3"		  10 : "TE_LAVASPLASH"		  11 : "TE_TELEPORT"		}		+target(Target) : "Parent Train" {			func_train_ext		}		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"			2 :	"Emit Solid Particles"			4 :	"Kill Particles on Touch"			8 :	"Kill Particles After Last Frame"		   16 :	"Spin Particles"		   32 :	"Stagger Start Frames"		   64 :	"Kill Particles in func_water"		  128 :	"Can be Manipulated by Effectors"		  256 :	"Spawn Stopped (Spin)"		}	}		t_effector_destroy : "Destroy Effector" solid {		count(Int) : "% of Particles to Affect" : 100		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"		}	}		t_effector_push : "Push Effector" solid {		mangle(String) : "X Y Z Push Speed" : "0 0 0"		cnt(Int) : "% of Velocity to Diminish" : 10		count(Int) : "% of Particles to Affect" : 100		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"		   16 :	"Tangential"		}	}		t_effector_gravity : "Gravity Effector" solid {		gravity(Float) : "Gravity" : 1.0		count(Int) : "% of Particles to Affect" : 100		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"			2 :	"Absolute"		}	}		t_effector_trubulence : "Turbulence Effector" solid {		speed(Int) : "Maximum Turbluence" : 40		cnt(Int) : "% of Velocity to Diminish" : 10		count(Int) : "% of Particles to Affect" : 100		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"			2 :	"Don't Affect X speed"			4 :	"Don't Affect Y speed"			8 :	"Don't Affect Z speed"		   16 :	"Tangential"		}	}		t_effector_attract : "Attractor Effector" solid {		speed(Int) : "Strength of Attraction" : 80		cnt(Int) : "% of Velocity to Diminish" : 10		count(Int) : "% of Particles to Affect" : 100		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"		   16 :	"Tangential"		}	}		t_effector_friction : "Friction Effector" solid {		speed(Int) : "Amount of Friction" : 40		count(Int) : "% of Particles to Affect" : 100		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"		}	}}group { "Plat/Emitter Relay Triggers"	trigger_changedir : "Change Direction Relay" box(-8 -8 -8, 8 8 8) {		origin(Origin)		targetname(TargetName) : "Target Name"		target(Target) : "Target Destination" {			func_train_ext		}		+delay(Float) : "Delay before triggering" : 1.0	}		trigger_forward : "Forward Relay" box(-8 -8 -8, 8 8 8) {		origin(Origin)		targetname(TargetName) : "Target Name"		target(Target) : "Target Destination" {			func_train_ext			func_emitter			func_emitter_volume		}		+delay(Float) : "Delay before triggering" : 1.0	}		trigger_reverse : "Reverse Relay" box(-8 -8 -8, 8 8 8) {		origin(Origin)		targetname(TargetName) : "Target Name"		target(Target) : "Target Destination" {			func_train_ext			func_emitter			func_emitter_volume		}		+delay(Float) : "Delay before triggering" : 1.0	}		trigger_stop : "Stop Relay" box(-8 -8 -8, 8 8 8) {		origin(Origin)		targetname(TargetName) : "Target Name"		target(Target) : "Target Destination" {			func_train_ext			func_emitter			func_emitter_volume		}		+delay(Float) : "Delay before triggering" : 1.0	}		trigger_go : "Go Relay" box(-8 -8 -8, 8 8 8) {		origin(Origin)		targetname(TargetName) : "Target Name"		target(Target) : "Target Destination" {			func_train_ext			func_emitter			func_emitter_volume		}		+delay(Float) : "Delay before triggering" : 1.0	}}group { "Triggers"	trigger_relay2 : "Relay Trigger (2)" box(-8 -8 -8, 8 8 8) {		origin(Origin)		targetname(TargetName) : "Target Name"		target(Target) : "1st Target Destination"		event(Target) : "2nd Target Destination"		+delay(Float) : "Delay before triggering 1st target" : 1.0		+wait(Float) : "Delay before triggering 2nd target" : 1.0		+message(String) : "Display Message for 1st Target"		+message2(String) : "Display Message for 2nd Target"		+killtarget(Target) : "1st Kill Target Destination"		+killtarget2(Target) : "2nd Kill Target Destination"	}		trigger_chat : "Chat Trigger" solid {		netname(String) : "Name of Sender" : ""		message(String) : "Message" : ""		+angle(Angle) : "Player's Facing Direction" : 0		+target(Target) : "Target Destination" {			trigger_chat_relay		}		+delay(Float) : "Delay before triggering" : 1.0		+spawnflags(SpawnFlags) : "Spawn Flags" { }	}		trigger_chat_relay : "Chat Relay" box(-8 -8 -8, 8 8 8) {		origin(Origin)		netname(String) : "Name of Sender" : ""		message(String) : "Message" : ""		+targetname(TargetName) : "Target Name"		+target(Target) : "Target Destination" {			trigger_chat_relay		}		+delay(Float) : "Delay before triggering" : 1.0		+spawnflags(SpawnFlags) : "Spawn Flags" { }	}		trigger_shake : "Earthquake" box(-8 -8 -8, 8 8 8) {		origin(Origin)		dmg(Int) : "Strength at Center" : 120		count(Light) : "Effect Radius" : 200		wait(Float) : "Duration" : 1.0		+noise(String) : "Path to start WAV file" : ""		+noise1(String) : "Path to end WAV file" : ""		targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Shake View Only"		}	}		trigger_enemy : "Anger Trigger" box(-8 -8 -8, 8 8 8) {		origin(Origin)		target(Target) : "Target Destination"		targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags"  { }	}}group { "Miscellaneous"	func_ladder : "Ladder" solid {		angle(Angle) : "Player's Facing Direction" : 0		+spawnflags(SpawnFlags) : "Spawn Flags" { }	}		func_breakaway : "Breakaway Object" solid {		health(Int) : "Health" : 20		+frags(Int) : "Alt. Texture for Health" : 10		+noise(String) : "Path to dying WAV file" : ""		+noise1(String) : "Path to hurt WAV file" : ""		+target(Target) : "Target Destination"		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Heal Small Damage"			2 :	"Bleed"		}	}		func_explobsp : "Exploding Object" solid {		health(Int) : "Health" : 20		dmg(Int) : "Damage" : 160		+target(Target) : "Target Destination"		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Heal Small Damage"		}	}		func_bspframe : "BSP Model Frame" solid {		target(Target) : "Owner Object" {			func_switch			func_explobsp			func_breakaway		}		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"		}	}		func_model : "Model" box(-8 -8 -8, 8 8 8) {		origin(Origin)		mdl(String) : "Path to model" : ""		frame(Int) : "Model Frame" : 0		mangle(String) : "Angles" : "0 0 0"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Make Corpse"		}	}		func_nodraw : "Invisible Object" solid {		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Visible"		}	}}group { "Audio and Visual Effectors"	fx_ambientsound : "Custom Ambient Sound" box(-8 -8 -8, 8 8 8) {		origin(Origin)		noise(String) : "Path to WAV file" : ""		volume(Float) : "Volume" : 1.0		distance(IntSelect) : "Attenuation" : 3 {			0 : "ATTN_NONE"			1 : "ATTN_NORM"			2 : "ATTN_IDLE"			3 : "ATTN_STATIC"		}		+targetname(TargetName) : "Target Name"	}		fx_sound : "Custom Sound" box(-8 -8 -8, 8 8 8) {		origin(Origin)		noise(String) : "Path to WAV file" : ""		+noise1(String) : "Path to shutoff WAV file" : ""		volume(Float) : "Volume" : 1.0		distance(IntSelect) : "Attenuation" : 1 {			0 : "ATTN_NONE"			1 : "ATTN_NORM"			2 : "ATTN_IDLE"			3 : "ATTN_STATIC"		}		count(IntSelect) : "Number of Repeats" : -1 {		   -1 : "Infinite"		}		pausetime(Float) : "Delay between Repeats" : 5.0		+cnt(Float) : "Random Delay Seed" : 0		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"		}	}		fx_spark : "Sparks" box(-8 -8 -8, 8 8 8) {		origin(Origin)		wait(Float) : "Delay between sparks (randomized)" : 0.0		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"			2 :	"Silent"		}	}		fx_drip : "Drip" box(-8 -8 -8, 8 8 8) {		origin(Origin)		wait(Float) : "Delay between drips (randomized)" : 0.0		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags" {			1 :	"Start On"			2 :	"Silent"		}	}}group { "Rotating Brushes"	info_rotate : "Centre of Rotation" box(-8 -8 -8, 8 8 8) {		origin(Origin)		targetname(TargetName) : "Target Name"	}		rotate_object : "Rotating Object" solid {		target(Target) : "Center of Rotation" {			info_rotate		}		targetname(TargetName) : "Target Name"	}	func_rotate_entity : "Continuous Rotate" box(-8 -8 -8, 8 8 8) {		origin(Origin)		target(Target) : "Brush to Rotate" {			rotate_object		}				rotate(String) : "Rotation Rate" : "0 90 0"		speed(Int) : "Wind up/down Speed" : 2		+targetname(TargetName) : "Target Name"		+spawnflags(SpawnFlags) : "Spawn Flags"  {			1:	"TOGGLE"			2:	"START_ON"		}	}		func_rotate_door : "Rotate Door" box(-8 -8 -8, 8 8 8) {		origin(Origin)		angles(String) : "Angle" : "0 90 0"		target(Target) : "Target" {			rotate_object		}		targetname(TargetName) : "Target Name"		+dmg(Int) : "Damage" : 2		+speed(Float) : "Rotate Time" : 2.0		+sounds(IntSelect) : "Sounds" : 3 {			1: "medieval"			2: "metal"			3: "base"		}		+spawnflags(SpawnFlags) : "Spawn Flags"  {			1:	"STAYOPEN"		}	}	func_rotate_train : "Rotate Platform" box(-8 -8 -8, 8 8 8) {		origin(Origin)		speed(Int) : "Speed" : 100		target(Target) : "Target" {			rotate_object		}		path(Target) : "Path" {			path_rotate		}		+dmg(Int) : "Damage" : 0		+targetname(TargetName) : "Target Name"		+sounds(IntSelect) : "Sounds" : 0 {			0: "none"			1: "metal ratchet"		}	}		func_movewall : "Moving Clipwall" solid {		targetname(TargetName) : "Target Name"		dmg(Int) : "Damage"		+spawnflags(SpawnFlags) : "Spawn Flags"  {			1:	"VISIBLE"			2:	"TOUCH"			4:	"NONBLOCKING"		}	}		path_rotate : "Rotating Path Point" box(-8 -8 -8, 8 8 8) {		origin(Origin)		targetname(TargetName) : "Target Name"		+target(Target) : "Next Target" {			path_rotate		}		+rotate(String) : "Rotation Rate" : "0 90 0"		+event(Target) : "Use target"		+angles(String) : "Angle" : "0 90 0"		+spawnflags(SpawnFlags) : "Spawn Flags"  {			1:	"ROTATION"			2:	"ANGLES"			4:	"NO_ROTATE"			8:	"DAMAGE"			16:	"MOVETIME"			32:	"SET_DAMAGE"		}	}}